(()=>{"use strict";var t={388:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.dotPath=e.tiePath=e.augmentationDashPath=e.underlinePath=e.barPath=e.ACCIDENTAL_TEXT=e.ACCIDENTAL_PATHS=e.PATH_SCALE=void 0,e.PATH_SCALE=100,e.ACCIDENTAL_PATHS=[null,"m 30,15 h 40 m -35,20 h 40 M 50,0 v 50 M 70,5 v 50","m 45,5 v 40 c 0,15 20,15 20,0 V 20 C 65,5 45,5 45,5 Z","M 45,5 v 45 M 65,0 v 45 H 45 m 20,10 H 45"],e.ACCIDENTAL_TEXT=["","#","b"],e.barPath="m 0,-50 v 100",e.underlinePath="m 0,0 h 100",e.augmentationDashPath="m 0,0 h 50",e.tiePath="M -13,5 C 15,-15 65,-15 90,5 C 65,-25 15,-25 -13,5 Z",e.dotPath="M 0 0 a 15 15 0 1 0 0.0001 0 z"},811:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SVGNS=void 0,e.drawSVGPath=function(t,n,i,r,l,a,u){void 0===u&&(u=1);var o=document.createElementNS(e.SVGNS,"path");return o.setAttributeNS(null,"d",n),o.setAttributeNS(null,"transform","translate(".concat(i,", ").concat(r,") scale(").concat(l,", ").concat(a,")")),u<1&&o.setAttributeNS(null,"opacity","".concat(u)),t.appendChild(o),o},e.drawSVGText=function(t,n,i,r,l,a,u,o,d,c){void 0===a&&(a="normal"),void 0===u&&(u="middle"),void 0===o&&(o="middle"),void 0===d&&(d="currentColor"),void 0===c&&(c=1);var s=document.createElementNS(e.SVGNS,"text");s.setAttributeNS(null,"font-family","sans-serif"),s.setAttributeNS(null,"font-size",l),s.setAttributeNS(null,"font-weight",a),s.setAttributeNS(null,"x","".concat(i)),s.setAttributeNS(null,"y","".concat(r)),s.setAttributeNS(null,"text-anchor",u),s.setAttributeNS(null,"dominant-baseline",o),"currentColor"!==d&&s.setAttributeNS(null,"fill",d),c<1&&s.setAttributeNS(null,"opacity","".concat(c));var h=document.createTextNode(n);return s.appendChild(h),t.appendChild(s),s},e.createSVGGroupChild=function(t,n){var i=document.createElementNS(e.SVGNS,"g");return n&&i.setAttribute("data-id",n),t.appendChild(i),i},e.setBlinkAnimation=function(t,n,i){void 0===n&&(n=!0),void 0===i&&(i="1s");var r=t.querySelector('animate[attributeName="opacity"]');return n?r?(r.setAttributeNS(null,"repeatCount","indefinite"),r.beginElement()):((r=document.createElementNS(e.SVGNS,"animate")).setAttributeNS(null,"attributeName","opacity"),r.setAttributeNS(null,"values","1;0.2;1"),r.setAttributeNS(null,"keyTimes","0;0.5;1"),r.setAttributeNS(null,"dur",i),r.setAttributeNS(null,"repeatCount","indefinite"),t.appendChild(r)):(r&&(r.endElement(),r.setAttributeNS(null,"repeatCount","0"),t.style.opacity="1"),t.style.opacity="1"),t},e.setFill=function(t,e){t.setAttributeNS(null,"fill",e)},e.setStroke=function(t,e,n){t.setAttributeNS(null,"stroke",e),t.setAttributeNS(null,"stroke-width","".concat(n))},e.highlightElement=function(t,e){var n=[];return t.matches("text, path")&&n.push(t),t.querySelectorAll("text, path").forEach((function(t){n.push(t)})),n.forEach((function(t){"none"!==t.getAttribute("fill")&&t.setAttribute("fill",e)})),t},e.resetElementHighlight=function(t,e){t.querySelectorAll("text, path").forEach((function(t){"none"!==t.getAttribute("fill")&&t.setAttribute("fill",e)}))},e.SVGNS="http://www.w3.org/2000/svg"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var l=e[i]={exports:{}};return t[i](l,l.exports,n),l.exports}(()=>{var t=n(811),e=n(388),i=document.getElementById("demo-container"),r=document.createElementNS("http://www.w3.org/2000/svg","svg");r.setAttribute("width","100%"),r.setAttribute("height","100%"),r.setAttribute("viewBox","0 0 500 300");var l=document.createElement("div");function a(){r.innerHTML="",(0,t.drawSVGPath)(r,e.tiePath,50,150,.3,.3)}l.className="test-case",l.innerHTML='\n    <div class="svg-container"></div>\n    <div class="controls">\n        <button id="test-path">测试路径绘制</button>\n        <button id="test-text">测试文本绘制</button>\n        <button id="test-group">测试分组</button>\n        <button id="test-fill">测试填充</button>\n        <button id="test-stroke">测试描边</button>\n        <button id="test-highlight">测试高亮</button>\n    </div>\n',i.appendChild(l),l.querySelector(".svg-container").appendChild(r),document.getElementById("test-path").addEventListener("click",a),document.getElementById("test-text").addEventListener("click",(function(){r.innerHTML="",(0,t.drawSVGText)(r,"普通文本",50,50,"20px"),(0,t.drawSVGText)(r,"粗体文本",50,100,"20px","bold"),(0,t.drawSVGText)(r,"缩放文本",90,200,"40px"),(0,t.setFill)(r.children[0],"black"),(0,t.setStroke)(r.children[1],"red",1),(0,t.highlightElement)(r.children[2],"blue")})),document.getElementById("test-group").addEventListener("click",(function(){r.innerHTML="";var n=(0,t.createSVGGroupChild)(r,"group1"),i=(0,t.createSVGGroupChild)(r,"group2");(0,t.drawSVGPath)(n,e.tiePath,50,50,1,1),(0,t.drawSVGPath)(i,e.tiePath,50,100,1,1),(0,t.highlightElement)(n,"purple"),(0,t.setStroke)(i,"orange",2)})),document.getElementById("test-fill").addEventListener("click",(function(){r.innerHTML="";var n=(0,t.drawSVGPath)(r,e.tiePath,200,150,.3,.3),i=(0,t.drawSVGText)(r,"填充测试",50,100,"20px");(0,t.setFill)(n,"red"),(0,t.setFill)(i,"blue")})),document.getElementById("test-stroke").addEventListener("click",(function(){r.innerHTML="";var n=(0,t.drawSVGPath)(r,e.tiePath,50,50,1,1),i=(0,t.drawSVGText)(r,"描边测试",50,100,"20px");(0,t.setStroke)(n,"green",5),(0,t.setStroke)(i,"purple",2)})),document.getElementById("test-highlight").addEventListener("click",(function(){r.innerHTML="";var n=(0,t.drawSVGPath)(r,e.tiePath,50,50,1,1),i=(0,t.drawSVGText)(r,"高亮测试",50,100,"20px");(0,t.highlightElement)(n,"orange"),(0,t.highlightElement)(i,"pink")})),a()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ekRlLEdBQU8sSUFBQStDLGFBQVlULEVBQUssT0FBUSxHQUFJLElBQUssU0FFL0MsSUFBQVUsU0FBUTVELEVBQU0sUUFDZCxJQUFBNEQsU0FBUWhELEVBQU0sT0FDbEIsSUE2QkFMLFNBQVMwQyxlQUFlLGVBQWdCUyxpQkFBaUIsU0EzQnpELFdBQ0lSLEVBQUlJLFVBQVksR0FHaEIsSUFBTXRELEdBQU8sSUFBQXVELGFBQVlMLEVBQUtNLEVBQVMzRCxRQUFTLEdBQUksR0FBSSxFQUFHLEdBQ3JEZSxHQUFPLElBQUErQyxhQUFZVCxFQUFLLE9BQVEsR0FBSSxJQUFLLFNBRS9DLElBQUFZLFdBQVU5RCxFQUFNLFFBQVMsSUFDekIsSUFBQThELFdBQVVsRCxFQUFNLFNBQVUsRUFDOUIsSUFtQkFMLFNBQVMwQyxlQUFlLGtCQUFtQlMsaUJBQWlCLFNBakI1RCxXQUNJUixFQUFJSSxVQUFZLEdBR2hCLElBQU10RCxHQUFPLElBQUF1RCxhQUFZTCxFQUFLTSxFQUFTM0QsUUFBUyxHQUFJLEdBQUksRUFBRyxHQUNyRGUsR0FBTyxJQUFBK0MsYUFBWVQsRUFBSyxPQUFRLEdBQUksSUFBSyxTQUUvQyxJQUFBYSxrQkFBaUIvRCxFQUFNLFdBQ3ZCLElBQUErRCxrQkFBaUJuRCxFQUFNLE9BQzNCLElBV0F5QyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamlhbnB1cmVuZGVyLy4vc3JjL3N2Z19wYXRocy50cyIsIndlYnBhY2s6Ly9qaWFucHVyZW5kZXIvLi9zcmMvc3ZnX3Rvb2xzLnRzIiwid2VicGFjazovL2ppYW5wdXJlbmRlci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9qaWFucHVyZW5kZXIvLi9kZW1vcy9zdmdfdG9vbHNfdGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMjUgZmx1ZnkzZC4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICovXHJcblxyXG4vKipcclxuICogQmFzZSBzY2FsZSBmb3IgcGF0aCBkZWZpbml0aW9ucy4gTW9zdCBjb29yZGluYXRlcyBhcmUgcmVsYXRpdmUgdG8gYSAxMDB4MTAwIGJveC5cclxuICogQWN0dWFsIHJlbmRlcmluZyBzaXplIGlzIGRldGVybWluZWQgYnkgY29uZmlnLm5vdGVIZWlnaHQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUEFUSF9TQ0FMRSA9IDEwMDtcclxuXHJcbi8vIC0tLSBBY2NpZGVudGFscyAtLS1cclxuLy8gVXNpbmcgc2ltcGxlciB0ZXh0IHN5bWJvbHMgaXMgb2Z0ZW4gZWFzaWVyIGZvciBKaWFucHUgYWNjaWRlbnRhbHMuXHJcbi8vIElmIHBhdGhzIGFyZSBwcmVmZXJyZWQsIGtlZXAgdGhlc2U6XHJcbmNvbnN0IHNoYXJwUGF0aCA9IGBtIDMwLDE1IGggNDAgbSAtMzUsMjAgaCA0MCBNIDUwLDAgdiA1MCBNIDcwLDUgdiA1MGA7IC8vIFNpbXBsZSBzaGFycCAjXHJcbmNvbnN0IGZsYXRQYXRoID0gYG0gNDUsNSB2IDQwIGMgMCwxNSAyMCwxNSAyMCwwIFYgMjAgQyA2NSw1IDQ1LDUgNDUsNSBaYDsgICAgLy8gU2ltcGxlIGZsYXQgYlxyXG5jb25zdCBuYXR1cmFsUGF0aCA9IGBNIDQ1LDUgdiA0NSBNIDY1LDAgdiA0NSBIIDQ1IG0gMjAsMTAgSCA0NWA7IC8vIFNpbXBsZSBuYXR1cmFsIOKZrlxyXG5cclxuLyoqIEFjY2lkZW50YWwgcGF0aHMgaW5kZXhlZCBieSBudW1lcmljIGlkZW50aWZpZXIgKDA9bm9uZSwgMT0jLCAyPWIsIDM94pmuKSAqL1xyXG4vLyBVc2luZyBudWxsIGZvciAwLCBhbmQgcG90ZW50aWFsbHkgdGV4dCBzeW1ib2xzIGluc3RlYWQgb2YgcGF0aHMuXHJcbmV4cG9ydCBjb25zdCBBQ0NJREVOVEFMX1BBVEhTID0gW251bGwsIHNoYXJwUGF0aCwgZmxhdFBhdGgsIG5hdHVyYWxQYXRoXTtcclxuLyoqIEFjY2lkZW50YWwgdGV4dCBzeW1ib2xzICovXHJcbmV4cG9ydCBjb25zdCBBQ0NJREVOVEFMX1RFWFQgPSBbJycsICcjJywgJ2InXTtcclxuXHJcbi8vIC0tLSBMaW5lcyBhbmQgRG90cyAtLS1cclxuLyoqIEJhciBsaW5lIChzaW1wbGUgdmVydGljYWwgbGluZSkgKi9cclxuZXhwb3J0IGNvbnN0IGJhclBhdGggPSAnbSAwLC01MCB2IDEwMCc7IC8vIENlbnRlcmVkIHZlcnRpY2FsbHkgYXJvdW5kIHk9MCwgaGVpZ2h0IDEwMFxyXG4vKiogVW5kZXJsaW5lIGZvciBkdXJhdGlvbiAoc2ltcGxlIGhvcml6b250YWwgbGluZSkgKi9cclxuZXhwb3J0IGNvbnN0IHVuZGVybGluZVBhdGggPSAnbSAwLDAgaCAxMDAnOyAvLyBXaWR0aCAxMDAsIGF0IHk9MFxyXG4vKiogQXVnbWVudGF0aW9uIERhc2ggKHNpbXBsZSBob3Jpem9udGFsIGxpbmUpICovXHJcbmV4cG9ydCBjb25zdCBhdWdtZW50YXRpb25EYXNoUGF0aCA9ICdtIDAsMCBoIDUwJzsgLy8gV2lkdGggNTAsIGF0IHk9MCAoYWRqdXN0IHdpZHRoIGFzIG5lZWRlZClcclxuLyoqIFRpZS9TbHVyIFBhdGggKGJhc2ljIGN1cnZlKSAqL1xyXG5leHBvcnQgY29uc3QgdGllUGF0aCA9IGBNIC0xMyw1IEMgMTUsLTE1IDY1LC0xNSA5MCw1IEMgNjUsLTI1IDE1LC0yNSAtMTMsNSBaYDsgIC8vIEJhc2ljIGFyYyBiZWxvdyBiYXNlbGluZVxyXG4vKiogRG90IFBhdGggKGNpcmNsZSBmb3Igb2N0YXZlL2F1Z21lbnRhdGlvbikgKi9cclxuZXhwb3J0IGNvbnN0IGRvdFBhdGggPSAnTSAwIDAgYSAxNSAxNSAwIDEgMCAwLjAwMDEgMCB6JzsgLy8gQ2lyY2xlIGNlbnRlcmVkIGF0IDAsMCwgcmFkaXVzIDE1IiwiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDI1IGZsdWZ5M2QuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqL1xyXG5cclxuIC8qKiBTVkcgTmFtZVNwYWNlIHN0cmluZyAqL1xyXG4gZXhwb3J0IGNvbnN0IFNWR05TID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJztcclxuXHJcbiAvKipcclxuICAqIERyYXdzIGEgU1ZHIHBhdGggb24gYSBTVkcgY29udGFpbmVyIGVsZW1lbnRcclxuICAqIEBwYXJhbSBlIFRoZSBTVkcgY29udGFpbmVyIGVsZW1lbnRcclxuICAqIEBwYXJhbSBwYXRoIFRoZSBTVkcgcGF0aCBzdHJpbmcgKCdkJyBhdHRyaWJ1dGUpXHJcbiAgKiBAcGFyYW0geCBIb3Jpem9udGFsIHBvc2l0aW9uIHJlbGF0aXZlIHRvIGNvbnRhaW5lciBvcmlnaW5cclxuICAqIEBwYXJhbSB5IFZlcnRpY2FsIHBvc2l0aW9uIHJlbGF0aXZlIHRvIGNvbnRhaW5lciBvcmlnaW5cclxuICAqIEBwYXJhbSBzY2FsZVggSG9yaXpvbnRhbCBzY2FsZSBmYWN0b3JcclxuICAqIEBwYXJhbSBzY2FsZVkgVmVydGljYWwgc2NhbGUgZmFjdG9yXHJcbiAgKiBAcGFyYW0gb3BhY2l0eSBPcGFjaXR5ICgwIHRvIDEpXHJcbiAgKiBAcmV0dXJucyBUaGUgZHJhd24gU1ZHIHBhdGggZWxlbWVudFxyXG4gICovXHJcbiBleHBvcnQgZnVuY3Rpb24gZHJhd1NWR1BhdGgoXHJcbiAgIGU6IFNWR0VsZW1lbnQsIHBhdGg6IHN0cmluZywgeDogbnVtYmVyLCB5OiBudW1iZXIsXHJcbiAgIHNjYWxlWDogbnVtYmVyLCBzY2FsZVk6IG51bWJlciwgb3BhY2l0eSA9IDFcclxuICk6IFNWR1BhdGhFbGVtZW50ICB7XHJcbiAgIGNvbnN0IGNoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFNWR05TLCAncGF0aCcpO1xyXG4gICBjaGlsZC5zZXRBdHRyaWJ1dGVOUyhudWxsLCAnZCcsIHBhdGgpO1xyXG4gICBjaGlsZC5zZXRBdHRyaWJ1dGVOUyhcclxuICAgICBudWxsLCAndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgke3h9LCAke3l9KSBzY2FsZSgke3NjYWxlWH0sICR7c2NhbGVZfSlgXHJcbiAgICk7XHJcbiAgIGlmIChvcGFjaXR5IDwgMSkge1xyXG4gICAgICAgY2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCwgJ29wYWNpdHknLCBgJHtvcGFjaXR5fWApO1xyXG4gICB9XHJcbiAgIGUuYXBwZW5kQ2hpbGQoY2hpbGQpO1xyXG4gICByZXR1cm4gY2hpbGQ7XHJcbiB9XHJcbiBcclxuIC8qKlxyXG4gICogRHJhd3MgU1ZHIHRleHQgb24gYSBTVkcgY29udGFpbmVyIGVsZW1lbnRcclxuICAqIEBwYXJhbSBlIFRoZSBTVkcgY29udGFpbmVyIGVsZW1lbnRcclxuICAqIEBwYXJhbSB0ZXh0IFRoZSB0ZXh0IGNvbnRlbnRcclxuICAqIEBwYXJhbSB4IEhvcml6b250YWwgcG9zaXRpb24gKGFuY2hvciBkZXBlbmRzIG9uIHRleHQtYW5jaG9yKVxyXG4gICogQHBhcmFtIHkgVmVydGljYWwgcG9zaXRpb24gKGFuY2hvciBkZXBlbmRzIG9uIGRvbWluYW50LWJhc2VsaW5lKVxyXG4gICogQHBhcmFtIGZvbnRTaXplIEZvbnQgc2l6ZSAoZS5nLiwgJzE2cHgnKVxyXG4gICogQHBhcmFtIGZvbnRXZWlnaHQgRm9udCB3ZWlnaHQgKCdub3JtYWwnLCAnYm9sZCcpXHJcbiAgKiBAcGFyYW0gdGV4dEFuY2hvciBIb3Jpem9udGFsIGFsaWdubWVudCAoJ3N0YXJ0JywgJ21pZGRsZScsICdlbmQnKVxyXG4gICogQHBhcmFtIGRvbWluYW50QmFzZWxpbmUgVmVydGljYWwgYWxpZ25tZW50ICgnbWlkZGxlJywgJ2hhbmdpbmcnLCAnY2VudHJhbCcsICdtYXRoZW1hdGljYWwnLCAndGV4dC1ib3R0b20nLCAndGV4dC10b3AnKVxyXG4gICogQHBhcmFtIGZpbGwgVGV4dCBjb2xvclxyXG4gICogQHBhcmFtIG9wYWNpdHkgT3BhY2l0eSAoMCB0byAxKVxyXG4gICogQHJldHVybnMgVGhlIGRyYXduIFNWRyB0ZXh0IGVsZW1lbnRcclxuICAqL1xyXG4gZXhwb3J0IGZ1bmN0aW9uIGRyYXdTVkdUZXh0KFxyXG4gICBlOiBTVkdFbGVtZW50LCB0ZXh0OiBzdHJpbmcsIHg6IG51bWJlciwgeTogbnVtYmVyLFxyXG4gICBmb250U2l6ZTogc3RyaW5nLCBmb250V2VpZ2h0ID0gJ25vcm1hbCcsXHJcbiAgIHRleHRBbmNob3I6ICdzdGFydCcgfCAnbWlkZGxlJyB8ICdlbmQnID0gJ21pZGRsZScsXHJcbiAgIGRvbWluYW50QmFzZWxpbmU6IHN0cmluZyA9ICdtaWRkbGUnLCAvLyBVc2Ugc3RyaW5nIGZvciBicm9hZGVyIFNWRyB2YWx1ZXNcclxuICAgZmlsbCA9ICdjdXJyZW50Q29sb3InLCAvLyBEZWZhdWx0IHRvIGluaGVyaXRpbmcgY29sb3JcclxuICAgb3BhY2l0eSA9IDFcclxuICk6IFNWR1RleHRFbGVtZW50IHsgLy8gUmV0dXJuIFNWR1RleHRFbGVtZW50IHNwZWNpZmljYWxseVxyXG4gICBjb25zdCBjaGlsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhTVkdOUywgJ3RleHQnKTtcclxuICAgY2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCwgJ2ZvbnQtZmFtaWx5JywgJ3NhbnMtc2VyaWYnKTsgLy8gU2ltcGxlIGRlZmF1bHRcclxuICAgY2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCwgJ2ZvbnQtc2l6ZScsIGZvbnRTaXplKTtcclxuICAgY2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCwgJ2ZvbnQtd2VpZ2h0JywgZm9udFdlaWdodCk7XHJcbiAgIGNoaWxkLnNldEF0dHJpYnV0ZU5TKG51bGwsICd4JywgYCR7eH1gKTtcclxuICAgY2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCwgJ3knLCBgJHt5fWApO1xyXG4gICBjaGlsZC5zZXRBdHRyaWJ1dGVOUyhudWxsLCAndGV4dC1hbmNob3InLCB0ZXh0QW5jaG9yKTtcclxuICAgY2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCwgJ2RvbWluYW50LWJhc2VsaW5lJywgZG9taW5hbnRCYXNlbGluZSk7XHJcbiAgICBpZiAoZmlsbCAhPT0gJ2N1cnJlbnRDb2xvcicpIHtcclxuICAgICAgIGNoaWxkLnNldEF0dHJpYnV0ZU5TKG51bGwsICdmaWxsJywgZmlsbCk7XHJcbiAgIH1cclxuICAgIGlmIChvcGFjaXR5IDwgMSkge1xyXG4gICAgICAgY2hpbGQuc2V0QXR0cmlidXRlTlMobnVsbCwgJ29wYWNpdHknLCBgJHtvcGFjaXR5fWApO1xyXG4gICB9XHJcbiBcclxuICAgY29uc3QgdGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0ZXh0KTtcclxuICAgY2hpbGQuYXBwZW5kQ2hpbGQodGV4dE5vZGUpO1xyXG4gICBlLmFwcGVuZENoaWxkKGNoaWxkKTtcclxuICAgcmV0dXJuIGNoaWxkO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIENyZWF0ZXMgYSBTVkcgZ3JvdXAgKCdnJykgZWxlbWVudCBhbmQgYXBwZW5kcyBpdCB0byBhIHBhcmVudC5cclxuICAqIEBwYXJhbSBwYXJlbnQgVGhlIHBhcmVudCBTVkcgZWxlbWVudFxyXG4gICogQHBhcmFtIGlkIE9wdGlvbmFsIGRhdGEtaWQgYXR0cmlidXRlIGZvciBpZGVudGlmaWNhdGlvblxyXG4gICogQHJldHVybnMgVGhlIGNyZWF0ZWQgU1ZHIGdyb3VwIGVsZW1lbnRcclxuICAqL1xyXG4gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNWR0dyb3VwQ2hpbGQocGFyZW50OiBTVkdFbGVtZW50LCBpZD86IHN0cmluZyk6IFNWR0dFbGVtZW50IHsgLy8gUmV0dXJuIFNWR0dFbGVtZW50XHJcbiAgIGNvbnN0IGNoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFNWR05TLCAnZycpO1xyXG4gICBpZiAoaWQpIHtcclxuICAgICBjaGlsZC5zZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnLCBpZCk7XHJcbiAgIH1cclxuICAgcGFyZW50LmFwcGVuZENoaWxkKGNoaWxkKTtcclxuICAgcmV0dXJuIGNoaWxkO1xyXG4gfVxyXG4gXHJcbi8qKlxyXG4gKiBTZXRzIGEgc2ltcGxlIGJsaW5raW5nIChvcGFjaXR5IGZhZGUgaW4vb3V0KSBhbmltYXRpb24gb24gYW4gZWxlbWVudC5cclxuICogQHBhcmFtIGUgVGhlIFNWRyBlbGVtZW50IHRvIGFuaW1hdGVcclxuICogQHBhcmFtIGVuYWJsZSBFbmFibGUgb3IgZGlzYWJsZSB0aGUgYW5pbWF0aW9uXHJcbiAqIEBwYXJhbSBkdXJhdGlvbiBBbmltYXRpb24gZHVyYXRpb24gKGUuZy4sICcycycpXHJcbiAqIEByZXR1cm5zIFRoZSBtb2RpZmllZCBTVkcgZWxlbWVudFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHNldEJsaW5rQW5pbWF0aW9uKFxyXG4gIGU6IFNWR0VsZW1lbnQsIGVuYWJsZSA9IHRydWUsIGR1cmF0aW9uID0gJzFzJ1xyXG4pOiBTVkdFbGVtZW50IHtcclxuICAvLyBUcnkgdG8gZmluZCBhbiBleGlzdGluZyA8YW5pbWF0ZT4gY2hpbGQgY29udHJvbGxpbmcgb3BhY2l0eVxyXG4gIGxldCBhbmltYXRpb24gPSBlLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAnYW5pbWF0ZVthdHRyaWJ1dGVOYW1lPVwib3BhY2l0eVwiXSdcclxuICApIGFzIFNWR0FuaW1hdGVFbGVtZW50IHwgbnVsbDtcclxuXHJcbiAgaWYgKGVuYWJsZSkge1xyXG4gICAgaWYgKCFhbmltYXRpb24pIHtcclxuICAgICAgLy8gQ3JlYXRlIGEgbmV3IDxhbmltYXRlPiBpZiBtaXNzaW5nXHJcbiAgICAgIGFuaW1hdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhTVkdOUywgJ2FuaW1hdGUnKTtcclxuICAgICAgYW5pbWF0aW9uLnNldEF0dHJpYnV0ZU5TKG51bGwsICdhdHRyaWJ1dGVOYW1lJywgJ29wYWNpdHknKTtcclxuICAgICAgYW5pbWF0aW9uLnNldEF0dHJpYnV0ZU5TKG51bGwsICd2YWx1ZXMnLCAnMTswLjI7MScpO1xyXG4gICAgICBhbmltYXRpb24uc2V0QXR0cmlidXRlTlMobnVsbCwgJ2tleVRpbWVzJywgJzA7MC41OzEnKTtcclxuICAgICAgYW5pbWF0aW9uLnNldEF0dHJpYnV0ZU5TKG51bGwsICdkdXInLCBkdXJhdGlvbik7XHJcbiAgICAgIGFuaW1hdGlvbi5zZXRBdHRyaWJ1dGVOUyhudWxsLCAncmVwZWF0Q291bnQnLCAnaW5kZWZpbml0ZScpO1xyXG4gICAgICBlLmFwcGVuZENoaWxkKGFuaW1hdGlvbik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBSZXN1bWUgYW5pbWF0aW9uIGJ5IHJlc2V0dGluZyByZXBlYXRDb3VudCBhbmQgcmVzdGFydGluZ1xyXG4gICAgICAvLyBVc2UgYmVnaW5FbGVtZW50KCkgaW5zdGVhZCBvZiB1bnBhdXNlQW5pbWF0aW9ucygpXHJcbiAgICAgIGFuaW1hdGlvbi5zZXRBdHRyaWJ1dGVOUyhudWxsLCAncmVwZWF0Q291bnQnLCAnaW5kZWZpbml0ZScpO1xyXG4gICAgICBhbmltYXRpb24uYmVnaW5FbGVtZW50KCk7IC8vIFJlc3RhcnQgdGhlIFNNSUwgYW5pbWF0aW9uXHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIGlmIChhbmltYXRpb24pIHtcclxuICAgICAgLy8gU3RvcCB0aGUgYW5pbWF0aW9uIGJ5IGVuZGluZyBpdCBhbmQgcHJldmVudGluZyByZXBlYXRzXHJcbiAgICAgIC8vIFVzZSBlbmRFbGVtZW50KCkgaW5zdGVhZCBvZiBwYXVzZUFuaW1hdGlvbnMoKVxyXG4gICAgICBhbmltYXRpb24uZW5kRWxlbWVudCgpO1xyXG4gICAgICBhbmltYXRpb24uc2V0QXR0cmlidXRlTlMobnVsbCwgJ3JlcGVhdENvdW50JywgJzAnKTtcclxuICAgICAgLy8gRW5zdXJlIHRoZSBlbGVtZW50IHN0YXlzIGZ1bGx5IHZpc2libGVcclxuICAgICAgZS5zdHlsZS5vcGFjaXR5ID0gJzEnO1xyXG4gICAgfVxyXG4gICAgLy8gQWxzbyByZXNldCBpbmxpbmUgb3BhY2l0eSBpbiBjYXNlIGFuaW1hdGlvbiBlbGVtZW50IHdhcyByZW1vdmVkXHJcbiAgICBlLnN0eWxlLm9wYWNpdHkgPSAnMSc7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZTtcclxufVxyXG5cclxuIFxyXG4gLyoqXHJcbiAgKiBTZXRzIHRoZSBmaWxsIGNvbG9yIG9mIGFuIFNWRyBlbGVtZW50LlxyXG4gICogQHBhcmFtIGUgVGhlIFNWRyBlbGVtZW50XHJcbiAgKiBAcGFyYW0gY29sb3IgVGhlIENTUyBjb2xvciBzdHJpbmdcclxuICAqL1xyXG4gZXhwb3J0IGZ1bmN0aW9uIHNldEZpbGwoZTogU1ZHRWxlbWVudCwgY29sb3I6IHN0cmluZykge1xyXG4gICBlLnNldEF0dHJpYnV0ZU5TKG51bGwsICdmaWxsJywgY29sb3IpO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIFNldHMgdGhlIHN0cm9rZSBjb2xvciBhbmQgd2lkdGggb2YgYW4gU1ZHIGVsZW1lbnQuXHJcbiAgKiBAcGFyYW0gZSBUaGUgU1ZHIGVsZW1lbnRcclxuICAqIEBwYXJhbSBjb2xvciBUaGUgQ1NTIGNvbG9yIHN0cmluZ1xyXG4gICogQHBhcmFtIHN0cm9rZVdpZHRoIFRoZSBzdHJva2Ugd2lkdGggaW4gcGl4ZWxzXHJcbiAgKi9cclxuIGV4cG9ydCBmdW5jdGlvbiBzZXRTdHJva2UoZTogU1ZHRWxlbWVudCwgY29sb3I6IHN0cmluZywgc3Ryb2tlV2lkdGg6IG51bWJlcikge1xyXG4gICBlLnNldEF0dHJpYnV0ZU5TKG51bGwsICdzdHJva2UnLCBjb2xvcik7XHJcbiAgIGUuc2V0QXR0cmlidXRlTlMobnVsbCwgJ3N0cm9rZS13aWR0aCcsIGAke3N0cm9rZVdpZHRofWApO1xyXG4gfVxyXG4gXHJcbiAvKipcclxuICAqIEhpZ2hsaWdodHMgYW4gZWxlbWVudCBieSBjaGFuZ2luZyBpdHMgZmlsbCBjb2xvci5cclxuICAqIE9mdGVuIHVzZWQgZm9yIGFjdGl2ZSBub3Rlcy5cclxuICAqIEBwYXJhbSBlIFRoZSBTVkcgZWxlbWVudCAodHlwaWNhbGx5IGEgZ3JvdXAgY29udGFpbmluZyBub3RlIHBhcnRzKVxyXG4gICogQHBhcmFtIGNvbG9yIFRoZSBoaWdobGlnaHQgY29sb3JcclxuICAqL1xyXG4gZXhwb3J0IGZ1bmN0aW9uIGhpZ2hsaWdodEVsZW1lbnQoZTogU1ZHRWxlbWVudCwgY29sb3I6IHN0cmluZykge1xyXG4gIC8vIEdhdGhlciBib3RoIHRoZSBlbGVtZW50IGl0c2VsZiAoaWYgaXQgbWF0Y2hlcykgYW5kIGl0cyBkZXNjZW5kYW50c1xyXG4gIGNvbnN0IHRvSGlnaGxpZ2h0OiBTVkdFbGVtZW50W10gPSBbXTtcclxuXHJcbiAgLy8gSWYgdGhlIGVsZW1lbnQgaXRzZWxmIGlzIGEgPHRleHQ+IG9yIDxwYXRoPiwgaW5jbHVkZSBpdFxyXG4gIGlmIChlLm1hdGNoZXMoJ3RleHQsIHBhdGgnKSkge1xyXG4gICAgdG9IaWdobGlnaHQucHVzaChlKTtcclxuICB9XHJcblxyXG4gIC8vIEFsc28gaW5jbHVkZSBhbnkgZGVzY2VuZGFudCA8dGV4dD4gb3IgPHBhdGg+XHJcbiAgZS5xdWVyeVNlbGVjdG9yQWxsPFNWR0VsZW1lbnQ+KCd0ZXh0LCBwYXRoJykuZm9yRWFjaChlbCA9PiB7XHJcbiAgICB0b0hpZ2hsaWdodC5wdXNoKGVsKTtcclxuICB9KTtcclxuXHJcbiAgLy8gQXBwbHkgdGhlIGZpbGwgY29sb3JcclxuICB0b0hpZ2hsaWdodC5mb3JFYWNoKGNoaWxkID0+IHtcclxuICAgIC8vIFNraXAgZWxlbWVudHMgd2l0aCBmaWxsPVwibm9uZVwiXHJcbiAgICBpZiAoY2hpbGQuZ2V0QXR0cmlidXRlKCdmaWxsJykgIT09ICdub25lJykge1xyXG4gICAgICBjaGlsZC5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCBjb2xvcik7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBlO1xyXG59XHJcblxyXG4gXHJcbiAvKipcclxuICAqIFJlc2V0cyB0aGUgaGlnaGxpZ2h0IG9mIGFuIGVsZW1lbnQsIHJldmVydGluZyB0byBhIGRlZmF1bHQgY29sb3IuXHJcbiAgKiBAcGFyYW0gZSBUaGUgU1ZHIGVsZW1lbnQgKHR5cGljYWxseSBhIGdyb3VwKVxyXG4gICogQHBhcmFtIGRlZmF1bHRDb2xvciBUaGUgY29sb3IgdG8gcmV2ZXJ0IHRvXHJcbiAgKi9cclxuIGV4cG9ydCBmdW5jdGlvbiByZXNldEVsZW1lbnRIaWdobGlnaHQoZTogU1ZHRWxlbWVudCwgZGVmYXVsdENvbG9yOiBzdHJpbmcpIHtcclxuICAgICAgY29uc3QgY2hpbGRyZW4gPSBlLnF1ZXJ5U2VsZWN0b3JBbGw8U1ZHRWxlbWVudD4oJ3RleHQsIHBhdGgnKTtcclxuICAgICAgY2hpbGRyZW4uZm9yRWFjaCgoY2hpbGQ6IFNWR0VsZW1lbnQpID0+IHtcclxuICAgICAgICAgIGlmIChjaGlsZC5nZXRBdHRyaWJ1dGUoJ2ZpbGwnKSAhPT0gJ25vbmUnKSB7XHJcbiAgICAgICAgICAgICAgY2hpbGQuc2V0QXR0cmlidXRlKCdmaWxsJywgZGVmYXVsdENvbG9yKTtcclxuICAgICAgICAgIH1cclxuICAgICAgfSk7XHJcbn0iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiaW1wb3J0IHsgXHJcbiAgICBkcmF3U1ZHUGF0aCwgXHJcbiAgICBkcmF3U1ZHVGV4dCwgXHJcbiAgICBjcmVhdGVTVkdHcm91cENoaWxkLCBcclxuICAgIHNldEZpbGwsXHJcbiAgICBzZXRTdHJva2UsXHJcbiAgICBoaWdobGlnaHRFbGVtZW50XHJcbn0gZnJvbSAnLi4vc3JjL3N2Z190b29scyc7XHJcbmltcG9ydCAqIGFzIHN2Z1BhdGhzIGZyb20gJy4uL3NyYy9zdmdfcGF0aHMnO1xyXG5cclxuLy8g5Yib5bu65rWL6K+V5a655ZmoXHJcbmNvbnN0IGRlbW9Db250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVtby1jb250YWluZXInKSE7XHJcblxyXG4vLyDliJvlu7pTVkfnlLvluINcclxuY29uc3Qgc3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdzdmcnKTtcclxuc3ZnLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCAnMTAwJScpO1xyXG5zdmcuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCAnMTAwJScpO1xyXG5zdmcuc2V0QXR0cmlidXRlKCd2aWV3Qm94JywgJzAgMCA1MDAgMzAwJyk7XHJcblxyXG4vLyDliJvlu7rmtYvor5XnlKjkvovlrrnlmahcclxuY29uc3QgdGVzdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG50ZXN0RGl2LmNsYXNzTmFtZSA9ICd0ZXN0LWNhc2UnO1xyXG50ZXN0RGl2LmlubmVySFRNTCA9IGBcclxuICAgIDxkaXYgY2xhc3M9XCJzdmctY29udGFpbmVyXCI+PC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY29udHJvbHNcIj5cclxuICAgICAgICA8YnV0dG9uIGlkPVwidGVzdC1wYXRoXCI+5rWL6K+V6Lev5b6E57uY5Yi2PC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBpZD1cInRlc3QtdGV4dFwiPua1i+ivleaWh+acrOe7mOWItjwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gaWQ9XCJ0ZXN0LWdyb3VwXCI+5rWL6K+V5YiG57uEPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBpZD1cInRlc3QtZmlsbFwiPua1i+ivleWhq+WFhTwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gaWQ9XCJ0ZXN0LXN0cm9rZVwiPua1i+ivleaPj+i+uTwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gaWQ9XCJ0ZXN0LWhpZ2hsaWdodFwiPua1i+ivlemrmOS6rjwvYnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbmA7XHJcbmRlbW9Db250YWluZXIuYXBwZW5kQ2hpbGQodGVzdERpdik7XHJcblxyXG4vLyDojrflj5ZTVkflrrnlmajlkozmjInpkq5cclxuY29uc3Qgc3ZnQ29udGFpbmVyID0gdGVzdERpdi5xdWVyeVNlbGVjdG9yKCcuc3ZnLWNvbnRhaW5lcicpITtcclxuc3ZnQ29udGFpbmVyLmFwcGVuZENoaWxkKHN2Zyk7XHJcblxyXG4vLyDmtYvor5Xlh73mlbBcclxuZnVuY3Rpb24gdGVzdFBhdGhEcmF3aW5nKCkge1xyXG4gICAgc3ZnLmlubmVySFRNTCA9ICcnO1xyXG4gICAgXHJcbiAgICAvLyDnu5jliLblkITnp43ot6/lvoRcclxuICAgIGRyYXdTVkdQYXRoKHN2Zywgc3ZnUGF0aHMudGllUGF0aCwgNTAsIDE1MCwgMC4zLCAwLjMpO1xyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gdGVzdFRleHREcmF3aW5nKCkge1xyXG4gICAgc3ZnLmlubmVySFRNTCA9ICcnO1xyXG4gICAgXHJcbiAgICAvLyDnu5jliLbkuI3lkIzmlofmnKzvvIjkuI3orr7nva5maWxs5bGe5oCn77yJXHJcbiAgICBkcmF3U1ZHVGV4dChzdmcsICfmma7pgJrmlofmnKwnLCA1MCwgNTAsICcyMHB4Jyk7XHJcbiAgICBkcmF3U1ZHVGV4dChzdmcsICfnspfkvZPmlofmnKwnLCA1MCwgMTAwLCAnMjBweCcsICdib2xkJyk7XHJcbiAgICBkcmF3U1ZHVGV4dChzdmcsICfnvKnmlL7mlofmnKwnLCA5MCwgMjAwLCAnNDBweCcpO1xyXG4gICAgXHJcbiAgICAvLyDorr7nva7kuI3lkIzmoLflvI9cclxuICAgIHNldEZpbGwoc3ZnLmNoaWxkcmVuWzBdIGFzIFNWR0VsZW1lbnQsICdibGFjaycpO1xyXG4gICAgc2V0U3Ryb2tlKHN2Zy5jaGlsZHJlblsxXSBhcyBTVkdFbGVtZW50LCAncmVkJywgMSk7XHJcbiAgICBoaWdobGlnaHRFbGVtZW50KHN2Zy5jaGlsZHJlblsyXSBhcyBTVkdFbGVtZW50LCAnYmx1ZScpO1xyXG59XHJcblxyXG5mdW5jdGlvbiB0ZXN0R3JvdXAoKSB7XHJcbiAgICBzdmcuaW5uZXJIVE1MID0gJyc7XHJcbiAgICBcclxuICAgIC8vIOWIm+W7uuWIhue7hFxyXG4gICAgY29uc3QgZ3JvdXAxID0gY3JlYXRlU1ZHR3JvdXBDaGlsZChzdmcsICdncm91cDEnKTtcclxuICAgIGNvbnN0IGdyb3VwMiA9IGNyZWF0ZVNWR0dyb3VwQ2hpbGQoc3ZnLCAnZ3JvdXAyJyk7XHJcbiAgICBcclxuICAgIC8vIOWcqOS4jeWQjOWIhue7hOS4ree7mOWItuWFg+e0oFxyXG4gICAgZHJhd1NWR1BhdGgoZ3JvdXAxLCBzdmdQYXRocy50aWVQYXRoLCA1MCwgNTAsIDEsIDEpO1xyXG4gICAgZHJhd1NWR1BhdGgoZ3JvdXAyLCBzdmdQYXRocy50aWVQYXRoLCA1MCwgMTAwLCAxLCAxKTtcclxuICAgIFxyXG4gICAgLy8g6K6+572u5YiG57uE5qC35byPXHJcbiAgICBoaWdobGlnaHRFbGVtZW50KGdyb3VwMSwgJ3B1cnBsZScpO1xyXG4gICAgc2V0U3Ryb2tlKGdyb3VwMiwgICdvcmFuZ2UnLCAyKTtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIHRlc3RGaWxsKCkge1xyXG4gICAgc3ZnLmlubmVySFRNTCA9ICcnO1xyXG4gICAgXHJcbiAgICAvLyDnu5jliLblhYPntKDlubborr7nva7loavlhYVcclxuICAgIGNvbnN0IHBhdGggPSBkcmF3U1ZHUGF0aChzdmcsIHN2Z1BhdGhzLnRpZVBhdGgsIDIwMCwgMTUwLCAwLjMsIDAuMyk7XHJcbiAgICBjb25zdCB0ZXh0ID0gZHJhd1NWR1RleHQoc3ZnLCAn5aGr5YWF5rWL6K+VJywgNTAsIDEwMCwgJzIwcHgnKTtcclxuICAgIFxyXG4gICAgc2V0RmlsbChwYXRoLCAncmVkJyk7XHJcbiAgICBzZXRGaWxsKHRleHQsICdibHVlJyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRlc3RTdHJva2UoKSB7XHJcbiAgICBzdmcuaW5uZXJIVE1MID0gJyc7XHJcbiAgICBcclxuICAgIC8vIOe7mOWItuWFg+e0oOW5tuiuvue9ruaPj+i+uVxyXG4gICAgY29uc3QgcGF0aCA9IGRyYXdTVkdQYXRoKHN2Zywgc3ZnUGF0aHMudGllUGF0aCwgNTAsIDUwLCAxLCAxKTtcclxuICAgIGNvbnN0IHRleHQgPSBkcmF3U1ZHVGV4dChzdmcsICfmj4/ovrnmtYvor5UnLCA1MCwgMTAwLCAnMjBweCcpO1xyXG4gICAgXHJcbiAgICBzZXRTdHJva2UocGF0aCwgJ2dyZWVuJywgNSk7XHJcbiAgICBzZXRTdHJva2UodGV4dCwgJ3B1cnBsZScsIDIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiB0ZXN0SGlnaGxpZ2h0KCkge1xyXG4gICAgc3ZnLmlubmVySFRNTCA9ICcnO1xyXG4gICAgXHJcbiAgICAvLyDnu5jliLblhYPntKDlubborr7nva7pq5jkuq5cclxuICAgIGNvbnN0IHBhdGggPSBkcmF3U1ZHUGF0aChzdmcsIHN2Z1BhdGhzLnRpZVBhdGgsIDUwLCA1MCwgMSwgMSk7XHJcbiAgICBjb25zdCB0ZXh0ID0gZHJhd1NWR1RleHQoc3ZnLCAn6auY5Lqu5rWL6K+VJywgNTAsIDEwMCwgJzIwcHgnKTtcclxuICAgIFxyXG4gICAgaGlnaGxpZ2h0RWxlbWVudChwYXRoLCAnb3JhbmdlJyk7XHJcbiAgICBoaWdobGlnaHRFbGVtZW50KHRleHQsICdwaW5rJyk7XHJcbn1cclxuXHJcbi8vIOa3u+WKoOaMiemSruS6i+S7tlxyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGVzdC1wYXRoJykhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGVzdFBhdGhEcmF3aW5nKTtcclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rlc3QtdGV4dCcpIS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRlc3RUZXh0RHJhd2luZyk7XHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZXN0LWdyb3VwJykhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGVzdEdyb3VwKTtcclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rlc3QtZmlsbCcpIS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRlc3RGaWxsKTtcclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rlc3Qtc3Ryb2tlJykhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGVzdFN0cm9rZSk7XHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZXN0LWhpZ2hsaWdodCcpIS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRlc3RIaWdobGlnaHQpO1xyXG5cclxuLy8g5Yid5aeL5pi+56S66Lev5b6E5rWL6K+VXHJcbnRlc3RQYXRoRHJhd2luZygpOyJdLCJuYW1lcyI6WyJQQVRIX1NDQUxFIiwiQUNDSURFTlRBTF9QQVRIUyIsIkFDQ0lERU5UQUxfVEVYVCIsImJhclBhdGgiLCJ1bmRlcmxpbmVQYXRoIiwiYXVnbWVudGF0aW9uRGFzaFBhdGgiLCJ0aWVQYXRoIiwiZG90UGF0aCIsImUiLCJwYXRoIiwieCIsInkiLCJzY2FsZVgiLCJzY2FsZVkiLCJvcGFjaXR5IiwiY2hpbGQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnROUyIsIlNWR05TIiwic2V0QXR0cmlidXRlTlMiLCJhcHBlbmRDaGlsZCIsInRleHQiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJ0ZXh0QW5jaG9yIiwiZG9taW5hbnRCYXNlbGluZSIsImZpbGwiLCJ0ZXh0Tm9kZSIsImNyZWF0ZVRleHROb2RlIiwicGFyZW50IiwiaWQiLCJzZXRBdHRyaWJ1dGUiLCJlbmFibGUiLCJkdXJhdGlvbiIsImFuaW1hdGlvbiIsInF1ZXJ5U2VsZWN0b3IiLCJiZWdpbkVsZW1lbnQiLCJlbmRFbGVtZW50Iiwic3R5bGUiLCJjb2xvciIsInN0cm9rZVdpZHRoIiwidG9IaWdobGlnaHQiLCJtYXRjaGVzIiwicHVzaCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWwiLCJnZXRBdHRyaWJ1dGUiLCJkZWZhdWx0Q29sb3IiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImRlbW9Db250YWluZXIiLCJnZXRFbGVtZW50QnlJZCIsInN2ZyIsInRlc3REaXYiLCJjcmVhdGVFbGVtZW50IiwidGVzdFBhdGhEcmF3aW5nIiwiaW5uZXJIVE1MIiwiZHJhd1NWR1BhdGgiLCJzdmdQYXRocyIsImNsYXNzTmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJkcmF3U1ZHVGV4dCIsInNldEZpbGwiLCJjaGlsZHJlbiIsInNldFN0cm9rZSIsImhpZ2hsaWdodEVsZW1lbnQiLCJncm91cDEiLCJjcmVhdGVTVkdHcm91cENoaWxkIiwiZ3JvdXAyIl0sInNvdXJjZVJvb3QiOiIifQ==